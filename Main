public class Main extends JavaPlugin implements Listener {
	public int tert;
	 public static Economy economy = null;
	ArrayList<String> players = new ArrayList<String>();
	ArrayList<Location> location = new ArrayList<Location>();
	ArrayList<Location> location2 = new ArrayList<Location>();
	ArrayList<String> test = new ArrayList<String>();
	
	private boolean setupEconomy()
    {
        RegisteredServiceProvider<Economy> economyProvider = getServer().getServicesManager().getRegistration(net.milkbowl.vault.economy.Economy.class);
        if (economyProvider != null) {
            economy = economyProvider.getProvider();
        }

        return (economy != null);
    }
	public void onEnable(){
		
		System.out.print("Pyx Bomb Plugin Activated");
		setupEconomy();
		Bukkit.getPluginManager().registerEvents(this, this);
		location2.add(new Location(Bukkit.getPlayer("ldrpc").getWorld(), 0, 71 , -18));
	Bukkit.getServer().getScheduler().scheduleSyncRepeatingTask(this, new Runnable() {
        public void run() {
        	for(Location car : location){
          for(int i = 1 ; i <= 5; i++) {
                    
                    double angle = ((2 * Math.PI) / 5) * i;
                   
                    double x = car.getX() + Math.cos(angle);
                    double z = car.getZ() + Math.sin(angle);
                   
                    Location temploc = new Location(car.getWorld(), x, car.getY(), z);
                    final Item isa = car.getWorld().dropItem(car, bomb());
                    isa.setVelocity(temploc.toVector().subtract(car.toVector()).multiply(0.7).setY(0.7));
                
                }
        	}
        }
    }, 0, 5);
	Bukkit.getServer().getScheduler().scheduleSyncRepeatingTask(this, new Runnable() {
        public void run() {
        	for(Location car : location){
                    
                FireworkEffectPlayer fplayer = new FireworkEffectPlayer();
                   try {
					fplayer.playFirework(car.getWorld(), car.getBlock().getLocation().add(0, 1, 0), FireworkEffect.builder().with(Type.BURST).withColor(Color.YELLOW).withFade(Color.ORANGE).build());
				} catch (IllegalArgumentException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (Exception e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}}}
        }, 0, 2);
	Bukkit.getServer().getScheduler().scheduleSyncRepeatingTask(this, new Runnable() {
        public void run() {
        	for(Location car : location){
                    
                FireworkEffectPlayer fplayer = new FireworkEffectPlayer();
                   try {
					fplayer.playFirework(car.getWorld(), car.getBlock().getLocation().add(0, 1, 0), FireworkEffect.builder().with(Type.BURST).withColor(Color.YELLOW).withFade(Color.ORANGE).build());
				} catch (IllegalArgumentException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (Exception e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}}}
        }, 0, 2);
	Bukkit.getServer().getScheduler().scheduleSyncRepeatingTask(this, new Runnable() {
        public void run() {
        	for(Location car : location){
                    
                FireworkEffectPlayer fplayer = new FireworkEffectPlayer();
                   try {
					fplayer.playFirework(car.getWorld(), car.getBlock().getLocation().add(0, 1, 0), FireworkEffect.builder().with(Type.BURST).withColor(Color.YELLOW).withFade(Color.ORANGE).build());
				} catch (IllegalArgumentException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (Exception e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}}}
        }, 0, 2);
	Bukkit.getServer().getScheduler().scheduleSyncRepeatingTask(this, new Runnable() {
        public void run() {
        	for(Location cars : location2){
                    
                FireworkEffectPlayer fplayer = new FireworkEffectPlayer();
                   try {
				} catch (IllegalArgumentException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (Exception e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}}}
        }, 0, 1);
	}
	    public void firework(World world, Location location){               
	            //Spawn the Firework, get the FireworkMeta.
	            Firework fw = (Firework) world.spawnEntity(location, EntityType.FIREWORK);
	            FireworkMeta fwm = fw.getFireworkMeta();
	           
	            //Our random generator
	            Random r = new Random();   
	 
	            //Get the type
	            int rt = r.nextInt(4) + 1;
	            Type type = Type.BALL;       
	            if (rt == 1) type = Type.BALL;
	            if (rt == 2) type = Type.BALL;
	            if (rt == 3) type = Type.BALL;
	            if (rt == 4) type = Type.BALL;
	           
	            //Create our effect with this
	            FireworkEffect effect = FireworkEffect.builder().flicker(r.nextBoolean()).withColor(Color.YELLOW).withFade(Color.ORANGE).with(type).trail(r.nextBoolean()).build();
	           
	            //Then apply the effect to the meta
	            fwm.addEffect(effect);
	           
	            //Generate some random power and set it
	            fwm.setPower((int) -0.9);
	           
	            //Then apply this to our rocket
	            fw.setFireworkMeta(fwm);           
	        }
	    @EventHandler
	    public void onPlayerInteract1(final PlayerPickupItemEvent event){
	    	int s = event.getItem().getItemStack().getTypeId();
	    	
	    	if(s == 175){
	    		event.setCancelled(true);
	    		event.getItem().remove();
	    		economy.depositPlayer(event.getPlayer(), 20);
	    	}
	    }
	    @EventHandler
	    public void onPlayerInteract1(final PlayerInteractEvent event){
	    	Player player = event.getPlayer();
	    	int blockId = player.getItemInHand().getType().getId();
	    	
	    	if(blockId == 175){
	    		if(!test.contains("yes")){
	    		if(economy.getBalance(player.getPlayer())>=2000){
	    			economy.withdrawPlayer(player, 2000);
	    		final Item i = player.getWorld().dropItem(player.getLocation().add(0, 1.5, 0), bomb());
	    		i.setVelocity(player.getLocation().getDirection().multiply(0.9));
	    		this.getServer().getScheduler().scheduleSyncDelayedTask(this, new Runnable() {
	    			  public void run() {
	    				  final Location is = i.getLocation();
	    				  location.add(is);
	    				  test.add("yes");
	    				  Player player = event.getPlayer();
	    				  Bukkit.broadcastMessage(ChatColor.YELLOW + "" + ChatColor.BOLD + "" + player.getName() + " has thrown a Pyx Bomb! Find it to get some pyxes!");
	    			  }
	    			}, 60L);
	    		this.getServer().getScheduler().scheduleSyncDelayedTask(this, new Runnable() {
	    			  public void run() {
	    				  final Location is = i.getLocation();
	    				  location.clear();
	    				  test.clear();
	    			  }
	    			}, 500L);
	    		} else {
	    			player.sendMessage(ChatColor.YELLOW + "" + ChatColor.BOLD + "Minepyx" + ChatColor.YELLOW + " ➜ " +  ChatColor.DARK_RED + "" + ChatColor.BOLD + "You either don't have enough pyxes, or there is already a pyx bomb going on!");
	    		}
	    		}
	    	}
	    }
	public ItemStack bomb(){
		ItemStack lvl7Wand = new ItemStack(175, 1);
		ItemMeta wandMeta = lvl7Wand.getItemMeta();
		wandMeta.setDisplayName(ChatColor.YELLOW + "Pyx Bomb" + ChatColor.GREEN + " Cost: 2000 pyxes");
		lvl7Wand.setItemMeta(wandMeta);
		return lvl7Wand;
	 }
	public boolean onCommand(CommandSender sender, Command cmd,  String commandLabel, String[] args){
		Player player = (Player) sender;
		World world = player.getWorld();
		if(commandLabel.equalsIgnoreCase("currencyparty")){
			if(players.contains(player.getName())){
				player.getInventory().removeItem(bomb());
				players.remove(player.getName());
				player.sendMessage(ChatColor.YELLOW + "" + ChatColor.BOLD + "Minepyx" + ChatColor.YELLOW + " ➜ " + ChatColor.GRAY + "" + ChatColor.BOLD + "You succesfully got rid of the pyx bomb!");
			} else {
				player.getInventory().addItem(bomb());
				players.add(player.getName());
				player.sendMessage(ChatColor.YELLOW + "" + ChatColor.BOLD + "Minepyx" + ChatColor.YELLOW + " ➜ " +  ChatColor.GRAY + "" + ChatColor.BOLD + "You succesfully got rid of the pyx bomb!, right click to throw it!");
			}
		}
		return false;
	}
}
